
##INCLUDE ..\..\codegen\iterator.imports.vbp
Imports osi.root.template

Partial Public Class hasharray(Of T,
                                  _UNIQUE As _boolean,
                                  _HASHER As _to_uint32(Of T),
                                  _EQUALER As _equaler(Of T))
##DEFINE TYPE ref
##DEFINE DEFINE_OPERATOR_PLUS False
##DEFINE FRIEND_CONSTRUCTOR False
##DEFINE DEFAULT_COMPARER False
##DEFINE USE_P_END True
##INCLUDE ..\..\codegen\random_access_iterator.single_step.vbp

    Partial Public Structure iterator
        <MethodImpl(method_impl_options.aggressive_inlining)>
        Friend Sub New(ByVal owner As hasharray(Of T, _UNIQUE, _HASHER, _EQUALER), ByVal column As UInt32, ByVal row As UInt32)
            Me.New(assert_which.of(owner).is_not_null().ref_at(column, row))
        End Sub

        Private Function move_next() As iterator
            Dim i As UInt32 = 0
            Dim j As UInt32 = 0
            i = p.column
            j = p.row + uint32_1
            While i < p.column_count()
                While j < p.row_count(i)
                    Dim r As ref = Nothing
                    r = p.ref_at(i, j)
                    If Not r.empty() Then
                        Return New iterator(r)
                    End If
                    j += uint32_1
                End While
                j = uint32_0
                i += uint32_1
            End While
            Return [end]
        End Function

        Private Function move_prev() As iterator
            Dim i As UInt32 = 0
            Dim j As UInt32 = 0
            i = p.column
            j = p.row
            While True
                While j > uint32_0
                    j -= uint32_1
                    Dim r As ref = Nothing
                    r = p.ref_at(i, j)
                    If Not r.empty() Then
                        Return New iterator(r)
                    End If
                End While
                If i = uint32_0 Then
                    Exit While
                End If
                i -= uint32_1
                j = p.row_count(i)
            End While
            Return [end]
        End Function

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Private Shared Function is_equal(ByVal this As ##TYPE##, ByVal that As ##TYPE##) As Boolean
            Return this.is_equal_to(that)
        End Function

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Friend Function ref() As ref
            Return p
        End Function

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Public Function value() As T
            Return +p
        End Function

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Public Shared Operator +(ByVal this As iterator) As T
            Return If(this = [end], Nothing, this.value())
        End Operator
    End Structure
End Class
