
##DEFAULT DEFINE_OPERATOR_PLUS True
##DEFAULT FRIEND_CONSTRUCTOR True
##DEFAULT DEFAULT_COMPARER True
##DEFAULT USE_P_END False
##DEFAULT TYPE_IS_STRUCT False

        Implements IComparable(Of iterator), IComparable

        Public Shared ReadOnly [end] As iterator

        Shared Sub New()
            [end] = New iterator()
        End Sub

        Private ReadOnly p As ##TYPE##

#If ##FRIEND_CONSTRUCTOR## Then
        Friend Sub New(ByVal that As ##TYPE##)
#Else
        Private Sub New(ByVal that As ##TYPE##)
#End If
#If Not ##TYPE_IS_STRUCT## Then
            assert(Not that Is Nothing)
#End If
            p = that
        End Sub

#If ##USE_P_END## Then
        Public Function is_end() As Boolean
            Return p.is_end()
        End Function
#Else
        Public Function is_end() As Boolean
            If type_info(Of iterator).is_valuetype Then
                Return p Is Nothing
            Else
                Return p Is Nothing AndAlso
                       (Not isdebugmode() OrElse
                        assert(object_compare(Me, [end]) = 0))
            End If
        End Function
#End If

        Public Function is_not_end() As Boolean
            Return Not is_end()
        End Function

#If ##DEFAULT_COMPARER## Then
        Private Shared Function is_equal(ByVal this As ##TYPE##, ByVal that As ##TYPE##) As Boolean
            Return object_compare(this, that) = 0
        End Function
#End If

        Public Shared Operator =(ByVal this As iterator, ByVal that As iterator) As Boolean
            If this.null_or_end() AndAlso that.null_or_end() Then
                Return True
            ElseIf this.null_or_end() OrElse that.null_or_end() Then
                Return False
            Else
                assert(Not this.is_null() AndAlso Not this.is_null())
                Return is_equal(this.p, that.p)
            End If
        End Operator

        Public Shared Operator <>(ByVal this As iterator, ByVal that As iterator) As Boolean
            Return Not (this = that)
        End Operator

        Public Function CompareTo(ByVal other As iterator) As Int32 Implements IComparable(Of iterator).CompareTo
            Return If(Me = other, 0, -1)
        End Function

        Public Function CompareTo(ByVal other As Object) As Int32 Implements IComparable.CompareTo
            Return CompareTo(cast(Of iterator)(other, False))
        End Function

    #If ##DEFINE_OPERATOR_PLUS## Then
        Public Shared Operator +(ByVal this As iterator) As ##TYPE##
            Return If(this = [end], Nothing, this.p)
        End Operator
    #End If
