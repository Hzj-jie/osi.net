
##INCLUDE static_iterator.vbp
##DEFAULT VALUE_TYPE T

    Partial Public Structure iterator
        Implements container_operator(Of ##VALUE_TYPE##).enumerator
        '1. iterator / reverse_iterator are combined together
        '2. do not allow to - from end, it's not must-have
        '3. operator+ / operator- should not impact current instance, considering i = j + 1
        <MethodImpl(method_impl_options.aggressive_inlining)>
        Public Shared Operator +(ByVal this As iterator, ByVal that As Int32) As iterator
            If this.is_end() OrElse that = 0 Then
                Return this
            End If
            If that > 0 Then
                Return this.move_next(CUInt(that))
            End If
            assert(that < 0)
            Return this.move_prev(CUInt(-that))
        End Operator

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Public Shared Operator -(ByVal this As iterator, ByVal that As Int32) As iterator
            Return this + (-that)
        End Operator

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Public Function at_end() As Boolean Implements container_operator(Of ##VALUE_TYPE##).enumerator.[end]
            Return is_end()
        End Function

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Public Function current() As ##VALUE_TYPE## Implements container_operator(Of ##VALUE_TYPE##).enumerator.current
            Return +Me
        End Function

        <MethodImpl(method_impl_options.aggressive_inlining)>
        Public Sub [next]() Implements container_operator(Of ##VALUE_TYPE##).enumerator.[next]
            move_next(1)
        End Sub
    End Structure
