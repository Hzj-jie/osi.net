
Option Explicit On
Option Infer Off
Option Strict On

'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with global_resolver.vbp ----------
'so change global_resolver.vbp instead of this file




'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with resolver_wrapper.vbp ----------
'so change resolver_wrapper.vbp instead of this file



Imports osi.root.constants

' Auto-infer is error-prone. E.g.
' global_resolver.register(Of T)(ByVal i As Func(Of T))
' cannot work as expected, the compiler automatically infers to
' global_resolver.register(Of T As Func(Of ?))(ByVal i As T).

Public NotInheritable Class global_resolver(Of T As Class)
    Inherits global_resolver(Of T, Object)

    Private Sub New()
    End Sub
End Class

Public Class global_resolver(Of T As Class, PROTECTOR)
    Private NotInheritable Class unregister_delegate
        Implements IDisposable

        Public Shared ReadOnly instance As unregister_delegate

        Shared Sub New()
            instance = New unregister_delegate()
        End Sub

        Private Sub New()
        End Sub

        Public Sub Dispose() Implements IDisposable.Dispose
            unregister()
        End Sub
    End Class


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with global_resolver_impl.vbp ----------
'so change global_resolver_impl.vbp instead of this file


    Private Shared ReadOnly r As thread_safe_resolver(Of T)

    Shared Sub New()
        r = New thread_safe_resolver(Of T)()
    End Sub

'finish global_resolver_impl.vbp --------
    Public Shared Sub register(ByVal i As T)
        r.register(i)
    End Sub

    Public Shared Sub register(ByVal i As Func(Of T))
        r.register(i)
    End Sub

    Public Shared Sub assert_first_register(ByVal i As T)
        r.assert_first_register(i)
    End Sub

    Public Shared Sub assert_first_register(ByVal i As Func(Of T))
        r.assert_first_register(i)
    End Sub

    Public Shared Sub unregister()
        r.unregister()
    End Sub

    Public Shared sub assert_unregister()
        r.assert_unregister()
    End Sub

    Public Shared Function resolve(ByRef o As T) As Boolean
        Return r.resolve(o)
    End Function

    Public Shared Function resolve(Of RT As T)(ByRef r As RT) As Boolean
        Dim o As T = Nothing
        Return resolve(o) AndAlso direct_cast(o, r)
    End Function

    Public Shared Function registered() As Boolean
        Return r.registered()
    End Function


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with resolver_wrapper_resolve.vbp ----------
'so change resolver_wrapper_resolve.vbp instead of this file



    Public Shared Function resolve(Of RT As T)() As RT
        Dim o As RT = Nothing
        assert(resolve(o))
        Return o
    End Function

    Public Shared Function resolve_or_null(Of RT As T)() As RT
        Return resolve_or_default([default](Of RT).null)
    End Function

    Public Shared Function resolve_or_default(Of RT As T)(ByVal [default] As RT) As RT
        Dim o As RT = Nothing
        If resolve(o) Then
            Return o
        Else
            Return [default]
        End If
    End Function

'finish resolver_wrapper_resolve.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with resolver_wrapper_resolve.vbp ----------
'so change resolver_wrapper_resolve.vbp instead of this file



    Public Shared Function resolve() As T
        Dim o As T = Nothing
        assert(resolve(o))
        Return o
    End Function

    Public Shared Function resolve_or_null() As T
        Return resolve_or_default([default](Of T).null)
    End Function

    Public Shared Function resolve_or_default(ByVal [default] As T) As T
        Dim o As T = Nothing
        If resolve(o) Then
            Return o
        Else
            Return [default]
        End If
    End Function

'finish resolver_wrapper_resolve.vbp --------

    Public Shared Function scoped_register(ByVal i As T) As IDisposable
        assert_first_register(i)
        Return unregister_delegate.instance
    End Function

    Public Shared Function scoped_register(ByVal i As Func(Of T)) As IDisposable
        assert_first_register(i)
        Return unregister_delegate.instance
    End Function

    Protected Sub New()
    End Sub
End Class

'finish resolver_wrapper.vbp --------
'finish global_resolver.vbp --------
