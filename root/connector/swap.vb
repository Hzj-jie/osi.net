
'this file is generated by osi/root/codegen/swap/swap.exe
'so edit the osi/root/codegen/swap/swap.cpp instead of this file

Option Explicit On
Option Infer Off
Option Strict On

Imports System.Runtime.CompilerServices
Imports osi.root.constants

Public Module _swap

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Decimal, ByRef y As Decimal)
        Dim i As Decimal = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Int64, ByRef y As Int64)
        Dim i As Int64 = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Int32, ByRef y As Int32)
        Dim i As Int32 = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Int16, ByRef y As Int16)
        Dim i As Int16 = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As SByte, ByRef y As SByte)
        Dim i As SByte = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As UInt64, ByRef y As UInt64)
        Dim i As UInt64 = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As UInt32, ByRef y As UInt32)
        Dim i As UInt32 = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As UInt16, ByRef y As UInt16)
        Dim i As UInt16 = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Byte, ByRef y As Byte)
        Dim i As Byte = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Single, ByRef y As Single)
        Dim i As Single = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Double, ByRef y As Double)
        Dim i As Double = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As String, ByRef y As String)
        Dim i As String = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Char, ByRef y As Char)
        Dim i As Char = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Boolean, ByRef y As Boolean)
        Dim i As Boolean = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As DateTime, ByRef y As DateTime)
        Dim i As DateTime = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(ByRef x As Type, ByRef y As Type)
        Dim i As Type = Nothing
        i = x
        x = y
        y = i
    End Sub

    <MethodImpl(method_impl_options.aggressive_inlining)>
    Public Sub swap(Of T)(ByRef x As T, ByRef y As T)
        Dim i As T = Nothing
        i = x
        x = y
        y = i
    End Sub

End Module
