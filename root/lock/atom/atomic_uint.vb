
Option Explicit On
Option Infer Off
Option Strict On

'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with atomic_uint.vbp ----------
'so change atomic_uint.vbp instead of this file



Imports System.Threading
Imports osi.root.constants
Imports osi.root.connector

Public Class atomic_uint
    Private i As Int32

    Public Sub New()
    End Sub

    Public Sub New(ByVal i As Int32)
        Me.i = i
    End Sub

    Public Sub New(ByVal i As UInt32)
        Me.i = uint32_int32(i)
    End Sub

    Public Function [get]() As UInt32
        Return int32_uint32(i)
    End Function

    Public Function add(ByVal i As UInt32) As UInt32
        Dim r As UInt32 = 0
        r = int32_uint32(Interlocked.Add(Me.i, uint32_int32(i)))
        Thread.MemoryBarrier()
        Return r
    End Function

    Public Function add(ByVal i As Int32) As UInt32
        Dim r As UInt32 = 0
        r = int32_uint32(Interlocked.Add(Me.i, i))
        Thread.MemoryBarrier()
        Return r
    End Function

    Public Function increment() As UInt32
        Dim r As UInt32 = 0
        r = int32_uint32(Interlocked.Increment(i))
        Thread.MemoryBarrier()
        Return r
    End Function

    Public Function decrement() As UInt32
        Dim r As UInt32 = 0
        r = int32_uint32(Interlocked.Decrement(i))
        Thread.MemoryBarrier()
        Return r
    End Function

    Public Function exchange(ByVal x As UInt32) As UInt32
        Dim r As UInt32 = 0
        r = int32_uint32(Interlocked.Exchange(i, uint32_int32(x)))
        Thread.MemoryBarrier()
        Return r
    End Function

    Public Function compare_exchange(ByVal value As UInt32,
                                     ByVal comparand As UInt32) As UInt32
        Dim r As UInt32 = 0
        r = int32_uint32(Interlocked.CompareExchange(i, uint32_int32(value), uint32_int32(comparand)))
        Thread.MemoryBarrier()
        Return r
    End Function

    Public Shared Operator +(ByVal i As atomic_uint) As UInt32
        Return i.get()
    End Operator

    Public Shared Widening Operator CType(ByVal this As Int32) As atomic_uint
        Return New atomic_uint(this)
    End Operator

    Public Shared Widening Operator CType(ByVal this As UInt32) As atomic_uint
        Return New atomic_uint(this)
    End Operator

    Public Shared Widening Operator CType(ByVal this As atomic_uint) As UInt32
        Return +this
    End Operator
End Class

'finish atomic_uint.vbp --------
