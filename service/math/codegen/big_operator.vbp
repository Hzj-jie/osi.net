
Partial Public NotInheritable Class ##CLASS_NAME##
    Public Shared Operator +(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As ##CLASS_NAME##
        Dim r As ##CLASS_NAME## = Nothing
        r = New ##CLASS_NAME##(this)
        Return r.add(that)
    End Operator

    Public Shared Operator +(ByVal this As ##CLASS_NAME##) As ##CLASS_NAME##
        Return this
    End Operator

    Public Shared Operator -(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As ##CLASS_NAME##
        Dim r As ##CLASS_NAME## = Nothing
        r = New ##CLASS_NAME##(this)
        Return r.sub(that)
    End Operator

    Public Shared Operator -(ByVal this As ##CLASS_NAME##) As ##CLASS_NAME##
        Dim r As ##CLASS_NAME## = Nothing
        r = New ##CLASS_NAME##(this)
        r.reverse_signal()
        Return r
    End Operator

    Public Shared Operator *(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As ##CLASS_NAME##
        Dim r As ##CLASS_NAME## = Nothing
        r = New ##CLASS_NAME##(this)
        Return r.multiply(that)
    End Operator

    Public Shared Operator \(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As ##CLASS_NAME##
        Dim r As ##CLASS_NAME## = Nothing
        r = New ##CLASS_NAME##(this)
        Return r.divide(that)
    End Operator

    Public Shared Operator >(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As Boolean
        Return compare(this, that) > 0
    End Operator

    Public Shared Operator <(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As Boolean
        Return compare(this, that) < 0
    End Operator

    Public Shared Operator =(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As Boolean
        Return compare(this, that) = 0
    End Operator

    Public Shared Operator <>(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As Boolean
        Return compare(this, that) <> 0
    End Operator

    Public Shared Operator <=(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As Boolean
        Return compare(this, that) <= 0
    End Operator

    Public Shared Operator >=(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As Boolean
        Return compare(this, that) >= 0
    End Operator

    Public Shared Operator ^(ByVal this As ##CLASS_NAME##, ByVal that As ##CLASS_NAME##) As ##CLASS_NAME##
        Return this.CloneT().power(that)
    End Operator
End Class

