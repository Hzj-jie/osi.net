
#include <b2style.h>
#include <testing.h>
#include <b2style/stdio.h>

struct S {
  int x;
  string y;
};

#include <b2style/heap_ptr.h>

void main() {
  b2style::heap_ptr<int> h1(100);
  b2style::testing::assert_equal<int>(h1.size(), 100);
  for (int i = 0; i < 100; i++) {
    h1.set(i, i + 1);
  }
  for (int i = 0; i < 100; i++) {
    b2style::testing::assert_equal<int>(h1.get(i), i + 1);
  }

  b2style::heap_ptr<S> h2(100);
  b2style::testing::assert_equal<int>(h2.size(), 100);
  for (int i = 0; i < 100; i++) {
    S s;
    s.x = i + 1;
    s.y = b2style::int_to_str(i + 2);
    h2.set(i, s);
  }
  for (int i = 0; i < 100; i++) {
    S s = h2.get(i);
    b2style::testing::assert_equal<int>(s.x, i + 1);
    b2style::testing::assert_equal<string>(s.y, b2style::int_to_str(i + 2));
  }

  b2style::testing::finished();
}
