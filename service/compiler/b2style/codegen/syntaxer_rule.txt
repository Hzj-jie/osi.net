
INCLUDE ../shared/syntaxer_rule.txt

raw-name-with-dot raw-name dot
# Support a.N::b function call and a.::N::b.
# Otherwise it should be name [double-colon]? [raw-name-with-double-colon]* [raw-name-with-dot]* raw-name
name [raw-name-with-dot]* [double-colon]? [raw-name-with-double-colon, raw-name-with-dot]* raw-name
type-name [double-colon]? [raw-name-with-double-colon]* raw-name
root-type [function, value-definition-with-semi-colon, heap-declaration-with-semi-colon, value-declaration-with-semi-colon, namespace-, include, define, ifndef-wrapped, logic-with-semi-colon, typedef-with-semi-colon, struct, class]
reference bit-and
namespace- kw-namespace name start-paragraph [root-type]* end-paragraph
sentence-with-semi-colon [ignore-result-heap-struct-function-call, ignore-result-function-call, value-definition, heap-declaration, value-declaration, value-clause, return-clause, kw-break, logic, self-value-clause, typedef, pre-operation-value, post-operation-value]? semi-colon
self-operator [self-add, self-minus, self-multiply, self-divide, self-mod, self-power, self-bit-and, self-bit-or, self-and, self-or, self-left-shift, self-right-shift]
self-value-clause variable-name self-operator value
for-loop kw-for start-bracket [value-definition, value-declaration]? semi-colon [value]? semi-colon [value-clause, self-value-clause, ignore-result-heap-struct-function-call, ignore-result-function-call, pre-operation-value, post-operation-value]? end-bracket paragraph
raw-value [heap-struct-function-call, function-call, variable-name, integer, biguint, ufloat, bool, string]
value-without-bracket [value-with-operation, raw-value]
value-with-operation [unary-operation-value, binary-operation-value]
unary-operation-value [pre-operation-value, post-operation-value]
pre-operation-value [not, self-inc, self-dec] value
# Should support post-operation-value value [self-inc, self-dec]
post-operation-value raw-value [self-inc, self-dec]
# Should support binary-operation-value value [add, minus, multiply, divide, mod, power, bit-and, bit-or, and, or, less-than, greater-than, less-or-equal, greater-or-equal, equal, not-equal] value
binary-operation-value raw-value [add, minus, multiply, divide, mod, power, bit-and, bit-or, and, or, left-shift, right-shift, less-than, greater-than, less-or-equal, greater-or-equal, equal, not-equal] value
variable-name [heap-struct-name, heap-name, name]
heap-struct-name heap-name dot name
ignore-result-heap-struct-function-call heap-struct-function-call
heap-struct-function-call heap-struct-name start-bracket [value-list]? end-bracket

# TODO: Support static function
class kw-class type-name start-paragraph [value-declaration-with-semi-colon, function]* end-paragraph semi-colon
