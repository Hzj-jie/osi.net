
Option Explicit On
Option Infer Off
Option Strict On

'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with name_with_namespace.vbp ----------
'so change name_with_namespace.vbp instead of this file


Imports osi.root.connector
Imports osi.root.formation

Partial Public NotInheritable Class b2style


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with ..\..\..\..\root\codegen\podw.vbp ----------
'so change ..\..\..\..\root\codegen\podw.vbp instead of this file


' Plan-Old-Data-Wrapper for vb.net.
#If False Then
Partial Public NotInheritable Class name_with_namespace
#Else
Partial Public Structure name_with_namespace
#End If
    Implements IComparable,
               IComparable(Of name_with_namespace),
               ICloneable,
               ICloneable(Of name_with_namespace),
               IEquatable(Of name_with_namespace)

    Private ReadOnly t As tuple(Of String, String)

    <copy_constructor>
    Private Sub New(ByVal t As tuple(Of String, String))
        Me.t = t
    End Sub

    Public Overrides Function Equals(ByVal obj As Object) As Boolean
        Return CompareTo(obj) = 0
    End Function

    Public Function EqualsT(ByVal other As name_with_namespace) As Boolean _
                           Implements IEquatable(Of name_with_namespace).Equals
        Return CompareTo(other) = 0
    End Function

    Public Overrides Function GetHashCode() As Int32
        Return t.GetHashCode()
    End Function

    Public Overrides Function ToString() As String
        Return t.ToString()
    End Function

    Public Function CompareTo(ByVal obj As Object) As Int32 Implements IComparable.CompareTo
        Return CompareTo(direct_cast(Of name_with_namespace)(obj, False))
    End Function

    Public Function CompareTo(ByVal other As name_with_namespace) As Int32 _
                             Implements IComparable(Of name_with_namespace).CompareTo
        Return t.CompareTo(other.t)
    End Function

    Public Function Clone() As Object Implements ICloneable.Clone
        Return CloneT()
    End Function

    Private Function CloneT() As name_with_namespace Implements ICloneable(Of name_with_namespace).Clone
        Return New name_with_namespace(t.CloneT())
    End Function
#If False Then
End Class
#Else
End Structure
#End If

'finish ..\..\..\..\root\codegen\podw.vbp --------

End Class
'finish name_with_namespace.vbp --------
