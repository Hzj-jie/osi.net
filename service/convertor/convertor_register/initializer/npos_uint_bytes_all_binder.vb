
Option Explicit On
Option Infer Off
Option Strict On

'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_all_binder.vbp ----------
'so change npos_uint_bytes_all_binder.vbp instead of this file


Imports osi.root.connector
Imports osi.root.constants


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_npos_uint()
        bytes_convertor_register(Of npos_uint).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As npos_uint) As Boolean
                Return npos_uint.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As npos_uint) As Boolean
                Return npos_uint.from_bytes(b, ii, il, o)
            End Function,
            Function(i As npos_uint, o() As Byte, ByRef offset As UInt32) As Boolean
                Return npos_uint.to_bytes(i, o, offset)
            End Function,
            Function(i As npos_uint, ByRef o() As Byte) As Boolean
                Return npos_uint.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_npos_uint32()
        bytes_convertor_register(Of npos_uint32).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As npos_uint32) As Boolean
                Return npos_uint32.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As npos_uint32) As Boolean
                Return npos_uint32.from_bytes(b, ii, il, o)
            End Function,
            Function(i As npos_uint32, o() As Byte, ByRef offset As UInt32) As Boolean
                Return npos_uint32.to_bytes(i, o, offset)
            End Function,
            Function(i As npos_uint32, ByRef o() As Byte) As Boolean
                Return npos_uint32.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_npos_uint64()
        bytes_convertor_register(Of npos_uint64).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As npos_uint64) As Boolean
                Return npos_uint64.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As npos_uint64) As Boolean
                Return npos_uint64.from_bytes(b, ii, il, o)
            End Function,
            Function(i As npos_uint64, o() As Byte, ByRef offset As UInt32) As Boolean
                Return npos_uint64.to_bytes(i, o, offset)
            End Function,
            Function(i As npos_uint64, ByRef o() As Byte) As Boolean
                Return npos_uint64.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_positive_npos_uint()
        bytes_convertor_register(Of positive_npos_uint).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As positive_npos_uint) As Boolean
                Return positive_npos_uint.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As positive_npos_uint) As Boolean
                Return positive_npos_uint.from_bytes(b, ii, il, o)
            End Function,
            Function(i As positive_npos_uint, o() As Byte, ByRef offset As UInt32) As Boolean
                Return positive_npos_uint.to_bytes(i, o, offset)
            End Function,
            Function(i As positive_npos_uint, ByRef o() As Byte) As Boolean
                Return positive_npos_uint.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_positive_npos_uint32()
        bytes_convertor_register(Of positive_npos_uint32).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As positive_npos_uint32) As Boolean
                Return positive_npos_uint32.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As positive_npos_uint32) As Boolean
                Return positive_npos_uint32.from_bytes(b, ii, il, o)
            End Function,
            Function(i As positive_npos_uint32, o() As Byte, ByRef offset As UInt32) As Boolean
                Return positive_npos_uint32.to_bytes(i, o, offset)
            End Function,
            Function(i As positive_npos_uint32, ByRef o() As Byte) As Boolean
                Return positive_npos_uint32.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_positive_npos_uint64()
        bytes_convertor_register(Of positive_npos_uint64).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As positive_npos_uint64) As Boolean
                Return positive_npos_uint64.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As positive_npos_uint64) As Boolean
                Return positive_npos_uint64.from_bytes(b, ii, il, o)
            End Function,
            Function(i As positive_npos_uint64, o() As Byte, ByRef offset As UInt32) As Boolean
                Return positive_npos_uint64.to_bytes(i, o, offset)
            End Function,
            Function(i As positive_npos_uint64, ByRef o() As Byte) As Boolean
                Return positive_npos_uint64.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_positive_size_t()
        bytes_convertor_register(Of positive_size_t).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As positive_size_t) As Boolean
                Return positive_size_t.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As positive_size_t) As Boolean
                Return positive_size_t.from_bytes(b, ii, il, o)
            End Function,
            Function(i As positive_size_t, o() As Byte, ByRef offset As UInt32) As Boolean
                Return positive_size_t.to_bytes(i, o, offset)
            End Function,
            Function(i As positive_size_t, ByRef o() As Byte) As Boolean
                Return positive_size_t.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_positive_size_t_32()
        bytes_convertor_register(Of positive_size_t_32).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As positive_size_t_32) As Boolean
                Return positive_size_t_32.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As positive_size_t_32) As Boolean
                Return positive_size_t_32.from_bytes(b, ii, il, o)
            End Function,
            Function(i As positive_size_t_32, o() As Byte, ByRef offset As UInt32) As Boolean
                Return positive_size_t_32.to_bytes(i, o, offset)
            End Function,
            Function(i As positive_size_t_32, ByRef o() As Byte) As Boolean
                Return positive_size_t_32.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_positive_size_t_64()
        bytes_convertor_register(Of positive_size_t_64).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As positive_size_t_64) As Boolean
                Return positive_size_t_64.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As positive_size_t_64) As Boolean
                Return positive_size_t_64.from_bytes(b, ii, il, o)
            End Function,
            Function(i As positive_size_t_64, o() As Byte, ByRef offset As UInt32) As Boolean
                Return positive_size_t_64.to_bytes(i, o, offset)
            End Function,
            Function(i As positive_size_t_64, ByRef o() As Byte) As Boolean
                Return positive_size_t_64.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_retry_times_t()
        bytes_convertor_register(Of retry_times_t).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As retry_times_t) As Boolean
                Return retry_times_t.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As retry_times_t) As Boolean
                Return retry_times_t.from_bytes(b, ii, il, o)
            End Function,
            Function(i As retry_times_t, o() As Byte, ByRef offset As UInt32) As Boolean
                Return retry_times_t.to_bytes(i, o, offset)
            End Function,
            Function(i As retry_times_t, ByRef o() As Byte) As Boolean
                Return retry_times_t.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_size_t()
        bytes_convertor_register(Of size_t).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As size_t) As Boolean
                Return size_t.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As size_t) As Boolean
                Return size_t.from_bytes(b, ii, il, o)
            End Function,
            Function(i As size_t, o() As Byte, ByRef offset As UInt32) As Boolean
                Return size_t.to_bytes(i, o, offset)
            End Function,
            Function(i As size_t, ByRef o() As Byte) As Boolean
                Return size_t.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_size_t_32()
        bytes_convertor_register(Of size_t_32).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As size_t_32) As Boolean
                Return size_t_32.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As size_t_32) As Boolean
                Return size_t_32.from_bytes(b, ii, il, o)
            End Function,
            Function(i As size_t_32, o() As Byte, ByRef offset As UInt32) As Boolean
                Return size_t_32.to_bytes(i, o, offset)
            End Function,
            Function(i As size_t_32, ByRef o() As Byte) As Boolean
                Return size_t_32.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_size_t_64()
        bytes_convertor_register(Of size_t_64).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As size_t_64) As Boolean
                Return size_t_64.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As size_t_64) As Boolean
                Return size_t_64.from_bytes(b, ii, il, o)
            End Function,
            Function(i As size_t_64, o() As Byte, ByRef offset As UInt32) As Boolean
                Return size_t_64.to_bytes(i, o, offset)
            End Function,
            Function(i As size_t_64, ByRef o() As Byte) As Boolean
                Return size_t_64.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------


'the following code is generated by /osi/root/codegen/precompile/precompile.exe
'with npos_uint_bytes_binder.vbp ----------
'so change npos_uint_bytes_binder.vbp instead of this file



Partial Public Class npos_uint_bytes_binder
    Public Shared Sub bind_timeout_ms_t()
        bytes_convertor_register(Of timeout_ms_t).assert_bind(
            Function(b() As Byte, ByRef offset As UInt32, ByRef o As timeout_ms_t) As Boolean
                Return timeout_ms_t.from_bytes(b, o, offset)
            End Function,
            Function(b() As Byte, ii As UInt32, il As UInt32, ByRef o As timeout_ms_t) As Boolean
                Return timeout_ms_t.from_bytes(b, ii, il, o)
            End Function,
            Function(i As timeout_ms_t, o() As Byte, ByRef offset As UInt32) As Boolean
                Return timeout_ms_t.to_bytes(i, o, offset)
            End Function,
            Function(i As timeout_ms_t, ByRef o() As Byte) As Boolean
                Return timeout_ms_t.to_bytes(i, o)
            End Function)
    End Sub
End Class
'finish npos_uint_bytes_binder.vbp --------

<global_init(global_init_level.services)>
Friend Class npos_uint_bytes_all_binder_initializer
    Shared Sub New()
        npos_uint_bytes_binder.bind_npos_uint()
        npos_uint_bytes_binder.bind_npos_uint32()
        npos_uint_bytes_binder.bind_npos_uint64()
        npos_uint_bytes_binder.bind_positive_npos_uint()
        npos_uint_bytes_binder.bind_positive_npos_uint32()
        npos_uint_bytes_binder.bind_positive_npos_uint64()
        npos_uint_bytes_binder.bind_positive_size_t()
        npos_uint_bytes_binder.bind_positive_size_t_32()
        npos_uint_bytes_binder.bind_positive_size_t_64()
        npos_uint_bytes_binder.bind_retry_times_t()
        npos_uint_bytes_binder.bind_size_t()
        npos_uint_bytes_binder.bind_size_t_32()
        npos_uint_bytes_binder.bind_size_t_64()
        npos_uint_bytes_binder.bind_timeout_ms_t()
    End Sub

    Private Shared Sub init()
    End Sub
End Class
'finish npos_uint_bytes_all_binder.vbp --------
